diff -ruN icu/source/common/unicode/umachine.h icu-aros/source/common/unicode/umachine.h
--- icu/source/common/unicode/umachine.h	2009-07-01 20:50:34.000000000 +0200
+++ icu-aros/source/common/unicode/umachine.h	2010-01-01 11:35:04.754138978 +0100
@@ -273,6 +273,10 @@
 #       endif
 #   elif defined(U_WINDOWS)
 #       define U_WCHAR_IS_UTF16
+#   elif defined(__AROS__)
+#       if (U_SIZEOF_WCHAR_T==4)
+#           define U_WCHAR_IS_UTF32
+#       endif
 #   endif
 #endif
 
diff -ruN icu/source/config/mh-aros icu-aros/source/config/mh-aros
--- icu/source/config/mh-aros	1970-01-01 01:00:00.000000000 +0100
+++ icu-aros/source/config/mh-aros	2010-01-01 11:35:04.754138978 +0100
@@ -0,0 +1,76 @@
+## AROS-specific setup
+
+## Commands to generate dependency files
+GEN_DEPS.c=  $(CC) -E -MM $(DEFS) $(CPPFLAGS)
+GEN_DEPS.cc= $(CXX) -E -MM $(DEFS) $(CPPFLAGS)
+
+## Flags for position independent code
+SHAREDLIBCFLAGS =
+SHAREDLIBCXXFLAGS =
+SHAREDLIBCPPFLAGS =
+
+## Additional flags when building libraries and with threads
+THREADSCPPFLAGS = -D_REENTRANT
+LIBCPPFLAGS =
+
+## Compiler switch to embed a runtime search path
+LD_RPATH=	
+LD_RPATH_PRE = -Wl,-rpath,
+
+## These are the library specific LDFLAGS
+LDFLAGSICUDT=-nodefaultlibs -nostdlib
+
+## Compiler switch to embed a library name
+LD_SONAME = -Wl,-soname -Wl,$(notdir $(MIDDLE_SO_TARGET))
+
+## Shared object suffix
+SO = so
+## Non-shared intermediate object suffix
+STATIC_O = ao
+
+## Compilation rules
+%.$(STATIC_O): $(srcdir)/%.c
+	$(COMPILE.c) $(STATICCPPFLAGS) $(STATICCFLAGS) -o $@ $<
+%.o: $(srcdir)/%.c
+	$(COMPILE.c) $(DYNAMICCPPFLAGS) $(DYNAMICCFLAGS) -o $@ $<
+
+%.$(STATIC_O): $(srcdir)/%.cpp
+	$(COMPILE.cc) $(STATICCPPFLAGS) $(STATICCXXFLAGS) -o $@ $<
+%.o: $(srcdir)/%.cpp
+	$(COMPILE.cc) $(DYNAMICCPPFLAGS) $(DYNAMICCXXFLAGS) -o $@ $<
+
+
+## Dependency rules
+%.d: $(srcdir)/%.c
+	@echo "generating dependency information for $<"
+	@$(SHELL) -ec '$(GEN_DEPS.c) $< \
+		| sed '\''s%\($*\)\.o[ :]*%\1.o $@ : %g'\'' > $@; \
+		[ -s $@ ] || rm -f $@'
+
+%.d: $(srcdir)/%.cpp
+	@echo "generating dependency information for $<"
+	@$(SHELL) -ec '$(GEN_DEPS.cc) $< \
+		| sed '\''s%\($*\)\.o[ :]*%\1.o $@ : %g'\'' > $@; \
+		[ -s $@ ] || rm -f $@'
+
+## Versioned libraries rules
+
+%.$(SO).$(SO_TARGET_VERSION_MAJOR): %.$(SO).$(SO_TARGET_VERSION)
+	$(RM) $@ && ln -s ${<F} $@
+%.$(SO): %.$(SO).$(SO_TARGET_VERSION_MAJOR)
+	$(RM) $@ && ln -s ${*F}.$(SO).$(SO_TARGET_VERSION) $@
+
+##  Bind internal references
+
+# LDflags that pkgdata will use
+BIR_LDFLAGS= -Wl,-Bsymbolic
+
+# Dependencies [i.e. map files] for the final library
+BIR_DEPS=
+
+## Remove shared library 's'
+STATIC_PREFIX_WHEN_USED = 
+STATIC_PREFIX = 
+
+## End AROS-specific setup
+
diff -ruN icu/source/configure icu-aros/source/configure
--- icu/source/configure	2009-07-01 20:51:26.000000000 +0200
+++ icu-aros/source/configure	2010-01-01 11:35:04.758139257 +0100
@@ -4110,19 +4110,16 @@
             *) ;;
         esac
     elif test "$DEFAULT_64BIT" = "unknown"; then
-        { { $as_echo "$as_me:$LINENO: error: Unable to determine binary format." >&5
-$as_echo "$as_me: error: Unable to determine binary format." >&2;}
-   { (exit 1); exit 1; }; }
-        # cross compiling?
-        #BITS_GOT=unknown
-        #case "$BITS_REQ" in
-        #    64|64else32) BITS_OK=no
-        #    BITS_CHECK_32=yes
-        #    BITS_CHECK_64=yes
-        #    32) BITS_OK=no;;
-        #    nochange) ;;
-        #    *) ;;
-        #esac
+        # cross compiling.
+        BITS_GOT=unknown
+        case "$BITS_REQ" in
+            64|64else32) BITS_OK=no
+            BITS_CHECK_32=yes
+            BITS_CHECK_64=yes ;;
+            32) BITS_OK=no;;
+            nochange) ;;
+            *) ;;
+        esac
     fi
 
     { $as_echo "$as_me:$LINENO: result: $DEFAULT_64BIT" >&5
@@ -4780,6 +4777,7 @@
 *-dec-osf*) icu_cv_host_frag=mh-alpha-osf ;;
 *-*-nto*)	icu_cv_host_frag=mh-qnx ;;
 *-ncr-*)	icu_cv_host_frag=mh-mpras ;;
+*-*-aros)	icu_cv_host_frag=mh-aros ;;
 *) 		icu_cv_host_frag=mh-unknown ;;
 esac
 
@@ -10237,9 +10235,11 @@
     fi
     datapackaging_howfound="$datapackaging_msg_set"
     ;;
-#    static)
-#	DATA_PACKAGING_MODE=static
-#	;;
+    static)
+    DATA_PACKAGING_MODE=static
+    datapackaging_msg="ICU data will be stored in a static library."
+    datapackaging_howfound="$datapackaging_msg_set"
+    ;;
 esac
 
 
diff -ruN icu/source/data/Makefile.in icu-aros/source/data/Makefile.in
--- icu/source/data/Makefile.in	2009-07-01 20:51:20.000000000 +0200
+++ icu-aros/source/data/Makefile.in	2010-01-01 11:35:04.758139257 +0100
@@ -34,8 +34,12 @@
 ifeq ($(PKGDATA_MODE),dll)
 ICUPKGDATA_OUTDIR = $(LIBDIR)
 else
+ifeq ($(PKGDATA_MODE),static)
+ICUPKGDATA_OUTDIR = $(LIBDIR)
+else
 ICUPKGDATA_OUTDIR = $(OUTDIR)
 endif
+endif
 
 CURDIR:=$(CURR_FULL_DIR)
 PKGDATA = $(TOOLBINDIR)/pkgdata $(PKGDATA_OPTS) -q -c -s $(CURDIR)/out/build/$(ICUDATA_PLATFORM_NAME) -d $(ICUPKGDATA_OUTDIR)
diff -ruN icu/source/extra/uconv/Makefile.in icu-aros/source/extra/uconv/Makefile.in
--- icu/source/extra/uconv/Makefile.in	2009-07-01 20:50:32.000000000 +0200
+++ icu-aros/source/extra/uconv/Makefile.in	2010-01-01 11:35:04.758139257 +0100
@@ -150,7 +150,7 @@
 package-resfiles: $(RESDIR)/$(RESDIR).lst pkgdata.inc
 	$(INVOKE) $(PKGDATA_INVOKE_OPTS) $(TOOLBINDIR)/pkgdata -p $(MSGNAME) $(PKGDATA_OPTS) -m $(PKGMODE) -s $(RESDIR) -d $(RESDIR) -T $(RESDIR) $(RESDIR)/$(RESDIR).lst
 
-$(RESDIR)/$(RESDIR).lst: Makefile $(srcdir)/resfiles.mk
+$(RESDIR)/$(RESDIR).lst: Makefile $(srcdir)/resfiles.mk $(RESFILES)
 	@$(MKINSTALLDIRS) $(RESDIR)
 	@-$(RMV) $@
 	@for file in $(RESFILES:$(RESDIR)/%.res=%.res); do \
diff -ruN icu/source/icudefs.mk.in icu-aros/source/icudefs.mk.in
--- icu/source/icudefs.mk.in	2009-07-01 20:51:26.000000000 +0200
+++ icu-aros/source/icudefs.mk.in	2010-01-01 11:35:04.758139257 +0100
@@ -64,10 +64,16 @@
 PKGDATA_LIBNAME = -L $(ICUPREFIX)$(DATA_STUBNAME)$(ICULIBSUFFIX)
 ICUPKGDATA_DIR = $(libdir)
 else
+ifeq ($(PKGDATA_MODE),static)
+ICUDATA_NAME = $(ICUDATA_PLATFORM_NAME)
+PKGDATA_LIBNAME = -L $(ICUPREFIX)$(DATA_STUBNAME)$(ICULIBSUFFIX)
+ICUPKGDATA_DIR = $(libdir)
+else
 ICUDATA_NAME = $(ICUDATA_PLATFORM_NAME)
 ICUPKGDATA_DIR = $(ICUDATA_DIR)
 endif
 endif
+endif
 # This is needed so that make -j2 doesn't complain when invoking pkgdata's make
 PKGDATA_INVOKE_OPTS = MAKEFLAGS=
 
diff -ruN icu/source/tools/pkgdata/pkgdata.cpp icu-aros/source/tools/pkgdata/pkgdata.cpp
--- icu/source/tools/pkgdata/pkgdata.cpp	2009-07-01 20:50:42.000000000 +0200
+++ icu-aros/source/tools/pkgdata/pkgdata.cpp	2010-01-01 11:37:56.164876790 +0100
@@ -70,12 +70,12 @@
 #define WINDOWS_WITH_MSVC
 #endif
 #endif
-#if !defined(WINDOWS_WITH_MSVC) && !defined(U_LINUX)
+//#if !defined(WINDOWS_WITH_MSVC) && !defined(U_LINUX)
 #define BUILD_DATA_WITHOUT_ASSEMBLY
-#endif
-#if defined(WINDOWS_WITH_MSVC) || defined(U_LINUX)
-#define CAN_WRITE_OBJ_CODE
-#endif
+//#endif
+//#if defined(WINDOWS_WITH_MSVC) || defined(U_LINUX)
+//#define CAN_WRITE_OBJ_CODE
+//#endif
 
 /*
  * When building the data library without assembly,
@@ -115,9 +115,10 @@
 static int32_t pkg_createWithAssemblyCode(const char *targetDir, const char mode, const char *gencFilePath);
 static int32_t pkg_generateLibraryFile(const char *targetDir, const char mode, const char *objectFile, char *command = NULL);
 static int32_t pkg_archiveLibrary(const char *targetDir, const char *version, UBool reverseExt);
-static void createFileNames(const char *version_major, const char *version, const char *libName, const UBool reverseExt);
+static void createFileNames(const char mode, const char *version_major, const char *version, const char *libName, const UBool reverseExt);
 
 static int32_t pkg_getOptionsFromICUConfig(UOption *option);
+static int runCommand(const char* command);
 
 enum {
     NAME,
@@ -461,6 +462,17 @@
     return result;
 }
 
+static int runCommand(const char* command)
+{
+    printf("pkgdata: %s\n", command);
+    int result = system(command);
+    if (result != 0)
+    {
+	printf("-- return status = %d\n", result);
+    }
+    return result;
+}
+
 #define LN_CMD "ln -s"
 #define RM_CMD "rm -f"
 
@@ -581,15 +593,14 @@
             }
 #endif
             /* Using the base libName and version number, generate the library file names. */
-            createFileNames(version_major, o->version, o->libName, reverseExt);
+            createFileNames(mode, version_major, o->version, o->libName, reverseExt);
 
             if (o->version != 0 && o->rebuild == FALSE) {
                 /* Check to see if a previous built data library file exists and check if it is the latest. */
-                sprintf(checkLibFile, "%s%s", targetDir, libFileNames[LIB_FILE_VERSION_TMP]);
+                sprintf(checkLibFile, "%s%s", targetDir, libFileNames[LIB_FILE_VERSION]);
                 if (T_FileStream_file_exists(checkLibFile)) {
                     if (isFileModTimeLater(checkLibFile, o->srcDir, TRUE) && isFileModTimeLater(checkLibFile, o->options)) {
                         if (o->install != NULL) {
-                            uprv_strcpy(libFileNames[LIB_FILE_VERSION], libFileNames[LIB_FILE_VERSION_TMP]);
                             result = pkg_installLibrary(o->install, targetDir);
                         }
                         return result;
@@ -666,7 +677,7 @@
  * Given the base libName and version numbers, generate the libary file names and store it in libFileNames.
  * Depending on the configuration, the library name may either end with version number or shared object suffix.
  */
-static void createFileNames(const char *version_major, const char *version, const char *libName, UBool reverseExt) {
+static void createFileNames(const char mode, const char *version_major, const char *version, const char *libName, UBool reverseExt) {
         sprintf(libFileNames[LIB_FILE], "%s%s",
                 pkgDataFlags[LIBPREFIX],
                 libName);
@@ -704,6 +715,10 @@
             uprv_strcpy(libFileNames[LIB_FILE_VERSION_TMP], libFileNames[LIB_FILE_VERSION_MAJOR]);
 #endif
         }
+        if(mode == MODE_STATIC) {
+            sprintf(libFileNames[LIB_FILE_VERSION], "%s.%s", libFileNames[LIB_FILE], pkgDataFlags[A_EXT]);
+            libFileNames[LIB_FILE_VERSION_MAJOR][0]=0;
+        }
 }
 
 /* Create the symbolic links for the final library file. */
@@ -724,7 +739,7 @@
             LN_CMD,
             libFileNames[LIB_FILE_VERSION],
             libFileNames[LIB_FILE_VERSION_MAJOR]);
-    result = system(cmd);
+    result = runCommand(cmd);
     if (result != 0) {
         return result;
     }
@@ -737,7 +752,7 @@
             libFileNames[LIB_FILE_VERSION],
             libFileNames[LIB_FILE], pkgDataFlags[SO_EXT]);
 
-     result = system(cmd);
+     result = runCommand(cmd);
 
     return result;
 }
@@ -753,7 +768,7 @@
             installDir, PKGDATA_FILE_SEP_STRING, libFileNames[LIB_FILE_VERSION]
             );
 
-    result = system(cmd);
+    result = runCommand(cmd);
 
     if (result != 0) {
         return result;
@@ -795,7 +810,7 @@
                         srcDir, PKGDATA_FILE_SEP_STRING, buffer,
                         installDir, PKGDATA_FILE_SEP_STRING, buffer);
 
-                result = system(cmd);
+                result = runCommand(cmd);
                 if (result != 0) {
                     fprintf(stderr, "Failed to install data file with command: %s\n", cmd);
                     break;
@@ -815,7 +830,7 @@
     }
 #else
     sprintf(cmd, "%s %s %s %s", WIN_INSTALL_CMD, srcDir, installDir, WIN_INSTALL_CMD_FLAGS);
-    result = system(cmd);
+    result = runCommand(cmd);
     if (result != 0) {
         fprintf(stderr, "Failed to install data file with command: %s\n", cmd);
     }
@@ -849,7 +864,17 @@
                 targetDir,
                 libFileNames[LIB_FILE_VERSION_TMP]);
 
-        result = system(cmd);
+        result = runCommand(cmd);
+        if (result != 0) {
+            return result;
+        }
+
+        sprintf(cmd, "%s %s%s",
+                pkgDataFlags[RANLIB],
+                targetDir,
+                libFileNames[LIB_FILE_VERSION]);
+
+        result = runCommand(cmd);
         if (result != 0) {
             return result;
         }
@@ -860,7 +885,7 @@
                 targetDir,
                 libFileNames[LIB_FILE_VERSION_TMP]);
 
-        result = system(cmd);
+        result = runCommand(cmd);
         if (result != 0) {
             return result;
         }
@@ -897,18 +922,30 @@
 
     if (mode == MODE_STATIC) {
 #ifdef OS400
-        sprintf(cmd, "QSH CMD('%s %s %s%s.%s %s')",
+        sprintf(cmd, "QSH CMD('%s %s %s%s %s')",
 #else
-        sprintf(cmd, "%s %s %s%s.%s %s",
+        sprintf(cmd, "%s %s %s%s %s",
 #endif
                 pkgDataFlags[AR],
                 pkgDataFlags[ARFLAGS],
                 targetDir,
-                libFileNames[LIB_FILE],
-                pkgDataFlags[A_EXT],
+                libFileNames[LIB_FILE_VERSION],
                 objectFile);
 
-        result = system(cmd);
+        result = runCommand(cmd);
+        if (result == 0)
+        {
+#ifdef OS400
+            sprintf(cmd, "QSH CMD('%s %s%s.%s')",
+#else
+            sprintf(cmd, "%s %s%s",
+#endif
+                pkgDataFlags[RANLIB],
+                targetDir,
+                libFileNames[LIB_FILE_VERSION]);
+
+            result = runCommand(cmd);
+        }
     } else /* if (mode == MODE_DLL) */ {
 #ifdef U_CYGWIN
         sprintf(cmd, "%s%s%s %s -o %s%s %s %s%s %s %s",
@@ -935,7 +972,7 @@
                 pkgDataFlags[BIR_FLAGS]);
 
         /* Generate the library file. */
-        result = system(cmd);
+        result = runCommand(cmd);
     }
 
     if (freeCmd) {
@@ -961,7 +998,7 @@
             tempObjectFile,
             gencFilePath);
 
-    result = system(cmd);
+    result = runCommand(cmd);
     if (result != 0) {
         return result;
     }
@@ -1043,7 +1080,7 @@
                         tempObjectFile,
                         gencmnFile);
             
-            result = system(cmd);
+            result = runCommand(cmd);
             if (result != 0) {
                 break;
             }
@@ -1094,7 +1131,7 @@
             sprintf(cmd, "cat %s >> %s", gencmnFile, icudtAll);
 #endif
             
-            result = system(cmd);
+            result = runCommand(cmd);
             if (result != 0) {
                 break;
             }
@@ -1110,14 +1147,13 @@
                     pkgDataFlags[LIBFLAGS],
                     tempObjectFile,
                     gencmnFile);
-        result = system(cmd);
+        result = runCommand(cmd);
         if (result != 0) {
             break;
         }
 
-        sprintf(buffer, "%s %s",
-                buffer,
-                tempObjectFile);
+        strcat(buffer, " ");
+        strcat(buffer, tempObjectFile);
 #endif
         
         if (i > 0) {
@@ -1139,11 +1175,10 @@
         tempObjectFile,
         icudtAll);
     
-    result = system(cmd);
+    result = runCommand(cmd);
     if (result == 0) {
-        sprintf(buffer, "%s %s",
-            buffer,
-            tempObjectFile);
+        strcat(buffer, " ");
+        strcat(buffer, tempObjectFile);
     }
 #endif
 
@@ -1222,7 +1257,7 @@
                 );
     }
 
-    return system(cmd);
+    return runCommand(cmd);
 }
 #endif
 
