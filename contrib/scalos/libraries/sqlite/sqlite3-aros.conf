##begin config
copyright Copyright ©2006 The Scalos Team
basename SQLite3Base
libbase SQLite3Base
libbasetype struct SQLite3Base
version 44.43
##end config

##begin cdef
#include <exec/types.h>
#include <sqlite3.h>

typedef int (*xBusyFunc)(void*,int);
typedef void (*xTraceFunc)(void*, const char*);
typedef int (*xProgressFunc)(void *);
typedef int (*xCommitFunc)(void*);
typedef void (*xDeleteFunc)(void*);
typedef int (*xCompareFunc)(void*,int,const void*,int,const void*);
typedef void (*xCollationNeededFunc)(void*, sqlite3*, int eTextRep, const char*);
typedef VOID (*xRollbackCallbackFunc)(VOID *);
typedef VOID (*xFunctionFunc)(sqlite3_context *pCtx, int i, sqlite3_value **pVal);
typedef VOID (*xFunctionStep)(sqlite3_context *pCtx, int i, sqlite3_value **pVal);
typedef VOID (*xFunctionFinal)(sqlite3_context *pCtx);
typedef int (*xCreateCollationCompare)(APTR p, int i, CONST_APTR p2, int j, CONST_APTR p3);
typedef VOID (*xCreateCollationDestroy)(APTR p);
##end cdef

##begin cdefprivate
#include "sqlite3_base.h"
##end cdefprivate

##begin functionlist
LONG SQLite3Close(sqlite3 *db) (A0)
.function LIBSQLite3Close
LONG SQLite3Exec(sqlite3 *db, CONST_STRPTR sql, sqlite3_callback xCallback, APTR pArg, STRPTR *errmsg) (A0,A1,A2,A3,D0)
.function LIBSQLite3Exec
LONG SQLite3Changes(sqlite3 *db) (A0)
.function LIBSQLite3Changes
LONG SQLite3TotalChanges(sqlite3 *db) (A0)
.function LIBSQLite3TotalChanges
VOID SQLite3Interrupt(sqlite3 *db) (A0)
.function LIBSQLite3Interrupt
LONG SQLite3Complete(CONST_STRPTR sql) (A0)
.function LIBSQLite3Complete
LONG SQLite3BusyHandler(sqlite3 *db, xBusyFunc callback, APTR userdata) (A0,A1,A2)
.function LIBSQLite3BusyHandler
LONG SQLite3BusyTimeout(sqlite3 *db, LONG ms) (A0,D0)
.function LIBSQLite3BusyTimeout
LONG SQLite3GetTable(sqlite3 *db, CONST_STRPTR sql, STRPTR **presult, LONG *nrow, LONG *ncolumn, STRPTR *errmsg) (A0,A1,A2,A3,D0,D1)
.function LIBSQLite3GetTable
VOID SQLite3FreeTable(STRPTR *result) (A0)
.function LIBSQLite3FreeTable
VOID SQLite3Free(STRPTR z) (A0)
.function LIBSQLite3Free
APTR SQLite3Trace(sqlite3 *db, xTraceFunc xTrace, APTR parg) (A0,A1,A2)
.function LIBSQLite3Trace
VOID SQLite3ProgressHandler(sqlite3 *db, LONG nOps, xProgressFunc xProgress, APTR pArg) (A0,D0,A1,A2)
.function LIBSQLite3ProgressHandler
APTR SQLite3CommitHook(sqlite3 *db, xCommitFunc xCallback, APTR pArg) (A0,A1,A2)
.function LIBSQLite3CommitHook
LONG SQLite3Open(CONST_STRPTR filename, sqlite3 **ppDb) (A0,A1)
.function LIBSQLite3Open
LONG SQLite3Errcode(sqlite3 *db) (A0)
.function LIBSQLite3Errcode
CONST_STRPTR SQLite3Errmsg(sqlite3 *db) (A0)
.function LIBSQLite3Errmsg
LONG SQLite3Prepare(sqlite3 *db, CONST_STRPTR zSql, LONG nBytes, sqlite3_stmt **ppStmt, CONST_STRPTR *pzTail) (A0,A1,D0,A2,A3)
.function LIBSQLite3Prepare
LONG SQLite3BindBlob(sqlite3_stmt *pStmt, LONG i, CONST_APTR zData, LONG nData, xDeleteFunc xDel) (A0,D0,A1,D1,A2)
.function LIBSQLite3BindBlob
LONG SQLite3BindInt(sqlite3_stmt *pStmt, LONG i, LONG iValue) (A0,D0,D1)
.function LIBSQLite3BindInt
LONG SQLite3BindNull(sqlite3_stmt *pStmt, LONG i) (A0,D0)
.function LIBSQLite3BindNull
LONG SQLite3BindText(sqlite3_stmt *pStmt, LONG i, CONST_STRPTR zData, LONG nData, xDeleteFunc xDel) (A0,D0,A1,D1,A2)
.function LIBSQLite3BindText
LONG SQLite3BindValue(sqlite3_stmt *pStmt, LONG i, CONST sqlite3_value *pVal) (A0,D0,A1)
.function LIBSQLite3BindValue
LONG SQLite3BindParameterCount(sqlite3_stmt *pStmt) (A0)
.function LIBSQLite3BindParameterCount
CONST_STRPTR SQLite3BindParameterName(sqlite3_stmt *pStmt, LONG i) (A0,D0)
.function LIBSQLite3BindParameterName
LONG SQLite3BindParameterIndex(sqlite3_stmt *pStmt, CONST_STRPTR zName) (A0,A1)
.function LIBSQLite3BindParameterIndex
LONG SQLite3ClearBindings(sqlite3_stmt *pStmt) (A0)
.function LIBSQLite3ClearBindings
LONG SQLite3ColumnCount(sqlite3_stmt *pStmt) (A0)
.function LIBSQLite3ColumnCount
CONST_STRPTR SQLite3ColumnName(sqlite3_stmt *pStmt,LONG i) (A0,D0)
.function LIBSQLite3ColumnName
CONST_STRPTR SQLite3ColumnDecltype(sqlite3_stmt *pStmt, LONG i) (A0,D0)
.function LIBSQLite3ColumnDecltype
LONG SQLite3Step(sqlite3_stmt *pStmt) (A0)
.function LIBSQLite3Step
LONG SQLite3DataCount(sqlite3_stmt *pStmt) (A0)
.function LIBSQLite3DataCount
CONST_APTR SQLite3ColumnBlob(sqlite3_stmt *pStmt, LONG iCol) (A0,D0)
.function LIBSQLite3ColumnBlob
LONG SQLite3ColumnBytes(sqlite3_stmt *pStmt, LONG iCol) (A0,D0)
.function LIBSQLite3ColumnBytes
LONG SQLite3ColumnInt(sqlite3_stmt *pStmt, LONG iCol) (A0,D0)
.function LIBSQLite3ColumnInt
CONST_STRPTR SQLite3ColumnText(sqlite3_stmt *pStmt, LONG iCol) (A0,D0)
.function LIBSQLite3ColumnText
LONG SQLite3ColumnType(sqlite3_stmt *pStmt, LONG iCol) (A0,D0)
.function LIBSQLite3ColumnType
LONG SQLite3Finalize(sqlite3_stmt *pStmt) (A0)
.function LIBSQLite3Finalize
LONG SQLite3Reset(sqlite3_stmt *pStmt) (A0)
.function LIBSQLite3Reset
LONG SQLite3AggregateCount(sqlite3_context *pCtx) (A0)
.function LIBSQLite3AggregateCount
CONST_APTR SQLite3ValueBlob(sqlite3_value *pVal) (A0)
.function LIBSQLite3ValueBlob
LONG SQLite3ValueBytes(sqlite3_value *pVal) (A0)
.function LIBSQLite3ValueBytes
LONG SQLite3ValueInt(sqlite3_value *pVal) (A0)
.function LIBSQLite3ValueInt
CONST_STRPTR SQLite3ValueText(sqlite3_value *pVal) (A0)
.function LIBSQLite3ValueText
LONG SQLite3ValueType(sqlite3_value *pVal) (A0)
.function LIBSQLite3ValueType
APTR SQLite3Aggregate_context(sqlite3_context *pCtx, LONG nBytes) (A0,D0)
.function LIBSQLite3Aggregate_context
APTR SQLite3UserData(sqlite3_context *pCtx) (A0)
.function LIBSQLite3UserData
APTR SQLite3GetAuxdata(sqlite3_context *pCtx, LONG iArg) (A0,D0)
.function LIBSQLite3GetAuxdata
VOID SQLite3SetAuxdata(sqlite3_context *pCtx, LONG iARg, APTR pAux, xDeleteFunc xDelete) (A0,D0,A1,A2)
.function LIBSQLite3SetAuxdata
VOID SQLite3ResultBlob(sqlite3_context *pCtx, CONST_APTR z, LONG n, xDeleteFunc xDelete) (A0,A1,D0,A2)
.function LIBSQLite3ResultBlob
VOID SQLite3ResultError(sqlite3_context *pCtx, CONST_STRPTR z, LONG n) (A0,A1,D0)
.function LIBSQLite3ResultError
VOID SQLite3ResultInt(sqlite3_context *pCtx, LONG iVal) (A0,D0)
.function LIBSQLite3ResultInt
VOID SQLite3ResultNull(sqlite3_context *pCtx) (A0)
.function LIBSQLite3ResultNull
VOID SQLite3ResultText(sqlite3_context *pCtx, CONST_STRPTR z, LONG n, xDeleteFunc xDelete) (A0,A1,D0,A2)
.function LIBSQLite3ResultText
VOID SQLite3ResultValue(sqlite3_context *pCtx, sqlite3_value *pValue) (A0,A1)
.function LIBSQLite3ResultValue
LONG SQLite3CreateCollation(sqlite3 *db, CONST_STRPTR zName, LONG eTextRep, APTR pCtx, xCompareFunc xCompare) (A0,A1,D0,A2,A3)
.function LIBSQLite3CreateCollation
LONG SQLite3CollationNeeded(sqlite3 *db, APTR pCollNeededArg, xCollationNeededFunc xCollNeeded) (A0,D0,A1)
.function LIBSQLite3CollationNeeded
LONG SQLite3Sleep(LONG ms) (D0)
.function LIBSQLite3Sleep
LONG SQLite3Expired(sqlite3_stmt *pStmt) (A0)
.function LIBSQLite3Expired
LONG SQLite3TransferBindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt) (A0,A1)
.function LIBSQLite3TransferBindings
LONG SQLite3GlobalRecover() ()
.function LIBSQLite3GlobalRecover
LONG SQLite3GetAutocommit(sqlite3 *db) (A0)
.function LIBSQLite3GetAutocommit
sqlite3 *SQLite3DbHandle(sqlite3_stmt *pStmt) (A0)
.function LIBSQLite3DbHandle
.version 41
APTR SQLite3RollbackHook(sqlite3 *db, xRollbackCallbackFunc callback, APTR pUserData) (A0,A1,A2)
.function LIBSQLite3RollbackHook
LONG SQLite3EnableSharedCache(BOOL enable) (D0)
.function LIBSQLite3EnableSharedCache
LONG SQLite3ReleaseMemory(LONG bytesCount) (D0)
.function LIBSQLite3ReleaseMemory
VOID SQLite3SoftHeapLimit(LONG maxBytes) (D0)
.function LIBSQLite3SoftHeapLimit
VOID SQLite3ThreadCleanup() ()
.function LIBSQLite3ThreadCleanup
.version 42
LONG SQLite3PrepareV2(sqlite3 *db, CONST_STRPTR zSql, LONG nBytes, sqlite3_stmt **ppStmt, CONST_STRPTR *pzTail) (A0,A1,D0,A2,A3)
.function LIBSQLite3PrepareV2
.version 43
LONG SQLite3CreateFunction(sqlite3 *db, CONST_STRPTR zFunctionName, LONG nArg, LONG eTextRep, APTR userdata, xFunctionFunc xFunc, xFunctionStep xStep, xFunctionFinal xFinal) (A0,A1,D0,D1,A2,A3,D2,D3)
.function LIBSQLite3CreateFunction
LONG SQLite3CreateModule(sqlite3 *db, CONST_STRPTR zName, CONST sqlite3_module *methods, APTR clientData) (A0,A1,A2,A3)
.function LIBSQLite3CreateModule
LONG SQLite3DeclareVtab(sqlite3 *db, CONST_STRPTR zCreateTable) (A0,A1)
.function LIBSQLite3DeclareVtab
LONG SQLite3OverloadFunction(sqlite3 *db, CONST_STRPTR zFuncName, LONG nArg) (A0,A1,D0)
.function LIBSQLite3OverloadFunction
LONG SQLite3BlobOpen(sqlite3 *db, CONST_STRPTR zDb, CONST_STRPTR zTable, CONST_STRPTR zColumn, LONG iRow, LONG flags, sqlite3_blob **ppBlob) (A0,A1,A2,A3,D0,D1,A4)
.function LIBSQLite3BlobOpen
LONG SQLite3BlobClose(sqlite3_blob *blob) (A0)
.function LIBSQLite3BlobClose
LONG SQLite3BlobBytes(sqlite3_blob *blob) (A0)
.function LIBSQLite3BlobBytes
LONG SQLite3BlobRead(sqlite3_blob *blob, APTR z, LONG n, LONG iOffset) (A0,A1,D0,D1)
.function LIBSQLite3BlobRead
LONG SQLite3BlobWrite(sqlite3_blob *blob, CONST_APTR z, LONG n, LONG iOffset) (A0,A1,D0,D1)
.function LIBSQLite3BlobWrite
LONG SQLite3ExtendedResultCodes(sqlite3 *db, LONG onoff) (A0,D0)
.function LIBSQLite3ExtendedResultCodes
LONG SQLite3BindZeroBlob(sqlite3_stmt *pStmt, LONG i, LONG n) (A0,D0,D1)
.function LIBSQLite3BindZeroBlob
CONST_STRPTR SQLite3ColumnDatabaseName(sqlite3_stmt *stmt, LONG n) (A0,D0)
.function LIBSQLite3ColumnDatabaseName
CONST_STRPTR SQLite3ColumnTableName(sqlite3_stmt *stmt, LONG n) (A0,D0)
.function LIBSQLite3ColumnTableName
CONST_STRPTR SQLite3ColumnOriginName(sqlite3_stmt *stmt, LONG n) (A0,D0)
.function LIBSQLite3ColumnOriginName
sqlite3_value *SQLite3ColumnValue(sqlite3_stmt *pStmt, LONG iCol) (A0,D0)
.function LIBSQLite3ColumnValue
LONG SQLite3CreateCollationV2(sqlite3 *db, CONST_STRPTR zName, LONG eTextRep, APTR pCtx, xCreateCollationCompare xCompare, xCreateCollationDestroy xDestroy) (A0,A1,D0,A2,A3,D1)
.function LIBSQLite3CreateCollationV2
CONST_STRPTR SQLite3LibVersion() ()
.function LIBSQLite3LibVersion
LONG SQLite3LibversionNumber() ()
.function LIBSQLite3LibversionNumber
VOID SQLite3ResultErrorToobig(sqlite3_context *pCtx) (A0)
.function LIBSQLite3ResultErrorToobig
VOID SQLite3ResultZeroBlob(sqlite3_context *pCtx, LONG n) (A0,D0)
.function LIBSQLite3ResultZeroBlob
LONG SQLite3ValueNumericType(sqlite3_value *pVal) (A0)
.function LIBSQLite3ValueNumericType
.version 44
LONG SQLite3ConfigV(LONG op, APTR ap) (D0,A0)
.function LIBSQLite3ConfigV
LONG SQLlite3DbConfigV(sqlite3 *db, LONG op, APTR ap) (A0,D0,A1)
.function LIBSQLlite3DbConfigV
sqlite3_vfs *SQLite3VfsFind(CONST_STRPTR zVfsName) (A0)
.function LIBSQLite3VfsFind
LONG SQLite3VfsRegister(sqlite3_vfs *vfs, LONG makeDflt) (A0,D0)
.function LIBSQLite3VfsRegister
LONG SQLite3VfsUnregister(sqlite3_vfs *vfs) (A0)
.function LIBSQLite3VfsUnregister
LONG SQLite3FileControl(sqlite3 *db, CONST_STRPTR zDbName, LONG op, void *arg) (A0,A1,D0,A2)
.function LIBSQLite3FileControl
LONG SQLite3Status(LONG op, LONG *pCurrent, LONG *pHighwater, LONG resetFlag) (D0,A0,A1,D1)
.function LIBSQLite3Status
LONG SQLite3DbStatus(sqlite3 *db, LONG op, LONG *pCur, LONG *pHiwtr, LONG resetFlg) (A0,D0,A1,A2,D1)
.function LIBSQLite3DbStatus
##end functionlist
