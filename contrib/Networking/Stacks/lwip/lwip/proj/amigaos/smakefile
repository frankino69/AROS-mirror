# How to tell the compiler the destination of object files
TO  = OBJNAME=
# How to tell the compiler include directories
INC = IDIR=
# How to tell the compiler new defines
DEF = DEFINE=
CFLAGS = NOVERS NOSTACKCHECK DATA=FAR DEF=BYTE_ORDER=BIG_ENDIAN # DEF=LWIP_DEBUG

CC = sc

SRCDIR = //src

COREOBJS = \
  $(SRCDIR)/core/inet.o \
  $(SRCDIR)/core/mem.o \
  $(SRCDIR)/core/memp.o \
  $(SRCDIR)/core/netif.o \
  $(SRCDIR)/core/pbuf.o \
  $(SRCDIR)/core/stats.o \
  $(SRCDIR)/core/sys.o \
  $(SRCDIR)/core/raw.o \
  $(SRCDIR)/core/tcp.o \
  $(SRCDIR)/core/tcp_in.o \
  $(SRCDIR)/core/tcp_out.o \
  $(SRCDIR)/core/udp.o \
  $(SRCDIR)/core/ipv4/icmp.o \
  $(SRCDIR)/core/ipv4/ip.o \
  $(SRCDIR)/core/ipv4/ip_addr.o \
  $(SRCDIR)/core/ipv4/ip_frag.o

APIOBJS = \
  $(SRCDIR)/api/api_lib.o \
  $(SRCDIR)/api/api_msg.o \
  $(SRCDIR)/api/err.o \
  $(SRCDIR)/api/sockets.o \
  $(SRCDIR)/api/tcpip.o

NETIFOBJS = \
  $(SRCDIR)/netif/loopif.o \
  $(SRCDIR)/netif/slipif.o

ARCHOBJS = \
  vsnprintf.o \
  sys_arch.o \
  lib_arch.o \
  netif/sio.o \
  netif/tcpdump.o

LIBOBJS= \
  calling.o \
  globaldata.o \
  localdata.o \
  lib_accept.o \
  lib_bind.o \
  lib_closesocket.o \
  lib_connect.o \
  lib_errno.o \
  lib_getdtablesize.o \
  lib_gethostbyname.o \
  lib_getpeername.o \
  lib_getsockname.o \
  lib_getsockopt.o \
  lib_inet_addr.o \
  lib_inet_ntoa.o \
  lib_inet_lnaof.o \
  lib_inet_makeaddr.o \
  lib_inet_netof.o \
  lib_inet_network.o \
  lib_ioctlsocket.o \
  lib_listen.o \
  lib_obtainsocket.o \
  lib_recv.o \
  lib_recvfrom.o \
  lib_releasecopyofsocket.o \
  lib_releasesocket.o \
  lib_send.o \
  lib_sendto.o \
  lib_seterrnoptr.o \
  lib_setsockopt.o \
  lib_shutdown.o \
  lib_socket.o \
  lib_stuff.o \
  lib_waitselect.o \
  lib_setsocketsignals.o \
  lib_socketbasetaglist.o

all: test testserver testclient testgethostbyname simpleping ping

test: $(COREOBJS) $(ARCHOBJS) $(NETIFOBJS) $(APIOBJS) $(LIBOBJS) test.o
  sc NOVERS TO test link with <<
$(COREOBJS) $(ARCHOBJS) $(NETIFOBJS) $(APIOBJS) $(LIBOBJS) test.o lib:debug.lib
<

testserver: testserver.o
  sc TO testserver link testserver.o

testclient: testclient.o
  sc TO testclient link testclient.o

ping: ping.o
  sc TO ping link ping.o

testgethostbyname: testgethostbyname.o
  sc TO testgethostbyname link testgethostbyname.o

testserver.o: testserver.c
	$(CC) RESOPT IGN=110,79 DEBUG=SF $(CFLAGS) $(INC)netinclude: $(INC)include: $(INC)$(SRCDIR)/include $(INC)$(SRCDIR)/include/ipv4 $(INC)$(SRCDIR)/arch/amigaos/include $(INC)`cd` $(OPTFLAGS) $(DEBUGFLAGS) $*.c #$(TO)objs/$*.o

testclient.o: testclient.c
	$(CC) RESOPT IGN=110,79 DEBUG=SF $(CFLAGS) $(INC)netinclude: $(INC)include: $(INC)$(SRCDIR)/include $(INC)$(SRCDIR)/include/ipv4 $(INC)$(SRCDIR)/arch/amigaos/include $(INC)`cd` $(OPTFLAGS) $(DEBUGFLAGS) $*.c #$(TO)objs/$*.o

ping.o: ping.c
	$(CC) RESOPT IGN=110,79 DEBUG=sf $(CFLAGS) $(INC)netinclude: $(INC)include: $(INC)$(SRCDIR)/include $(INC)$(SRCDIR)/include/ipv4 $(INC)$(SRCDIR)/arch/amigaos/include $(INC)`cd` $(OPTFLAGS) $(DEBUGFLAGS) $*.c #$(TO)objs/$*.o

simpleping: simpleping.c
	$(CC) RESOPT LINK IGN=110,79 DEBUG=sf $(CFLAGS) $(INC)netinclude: $(INC)include: $(INC)$(SRCDIR)/include $(INC)$(SRCDIR)/include/ipv4 $(INC)$(SRCDIR)/arch/amigaos/include $(INC)`cd` $(OPTFLAGS) $(DEBUGFLAGS) $*.c #$(TO)objs/$*.o

testgethostbyname.o: testgethostbyname.c
	$(CC) RESOPT IGN=110,79 DEBUG=sf $(CFLAGS) $(INC)netinclude: $(INC)include: $(INC)$(SRCDIR)/include $(INC)$(SRCDIR)/include/ipv4 $(INC)$(SRCDIR)/arch/amigaos/include $(INC)`cd` $(OPTFLAGS) $(DEBUGFLAGS) $*.c #$(TO)objs/$*.o


.c.o:
		$(CC) $(DEF)LWIP_TCP_REG_COMPILE_ERROR=1 $(DEF)IPv4 $(CFLAGS) $(INC)include $(INC)$(SRCDIR)/include $(INC)$(SRCDIR)/include/ipv4 $(INC)$(SRCDIR)/arch/amigaos/include $(INC)`cd` $(OPTFLAGS) $(DEBUGFLAGS) $*.c #$(TO)objs/$*.o
#		$(CC) $(DEF)IPv4 $(DEF)LWIP_DEBUG=1 $(CFLAGS) $(INC)$(SRCDIR)/include $(INC)$(SRCDIR)/include/ipv4 $(INC)$(SRCDIR)/arch/amigaos/include $(INC)`cd` $(OPTFLAGS) $(DEBUGFLAGS) $*.c #$(TO)objs/$*.o

dirs:
  execute <<
  if not exists objs
    makedir objs
  endif
  if not exists objs/core
    makedir objs/core
  endif
  if not exists objs/netif
    makedir objs/netif
  endif
<

clean:
  -delete \#?.o netif/\#?.o $(SRCDIR)/core/\#?.o $(SRCDIR)/core/ipv4/\#?.o $(SRCDIR)/netif/\#?.o $(SRCDIR)/arch/amigaos/\#?.o $(SRCDIR)/arch/amigaos/netif/\#?.o $(SRCDIR)/api/\#?.o \#?.o
