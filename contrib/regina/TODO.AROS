* Remove the wrapper functions in aros_funcs: either by using the C calling
  convention for the functions in the library (e.g. like arosc.library) or
  by changing rexxsaa.c so that the registers are used overthere.
  PS: Probably don't want to remove the wrapper functions so regina can be
      backported to Classic Amiga OS.
* Implement the external queue function (compile without NO_EXTERNAL_QUEUES).
* Fix the ARexx vs. ANSI REXX incompatibilies.
  These are: ^ is XOR in ARexx but is not in ANSI REXX.
  Multiple line strings in ARexx are not there in ASNI REXX and are said
  that they need to be avoided because the error handling is difficult
  to do with multiple line strings. Without them the interpreter knows
  when a close string character is forgotten at the end of a line.
* In ARexx the pragma function can be used to increase the stack size of the
  running script. At the moment this is not implemented in regina. I think
  this will need some hacking with setjmp/longjmp because in normal
  execution the code for pragma is executed in a function so calling
  StackSwap in this function and then returning from the function will cause
  havoc.
* When signals are present in AROS signals.c should be update to use the
  signal C function.
* and probably a lot more ...
