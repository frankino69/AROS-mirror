diff -Naur gcc-4.3.0-orig/gcc/config/rs6000/rs6000.c gcc-4.3.0/gcc/config/rs6000/rs6000.c
--- gcc-4.3.0-orig/gcc/config/rs6000/rs6000.c	2008-02-28 08:08:51.000000000 +0100
+++ gcc-4.3.0/gcc/config/rs6000/rs6000.c	2008-04-30 22:49:22.000000000 +0200
@@ -5135,6 +5135,8 @@
 	  && !lookup_attribute ("shortcall", TYPE_ATTRIBUTES (fntype))))
     cum->call_cookie |= CALL_LONG;
 
+  cum->stackparm = fntype && lookup_attribute("stackparm", TYPE_ATTRIBUTES(fntype));
+
   if (TARGET_DEBUG_ARG)
     {
       fprintf (stderr, "\ninit_cumulative_args:");
@@ -5973,6 +5975,9 @@
       /* Else fall through to usual handling.  */
     }
 
+  if (cum->stackparm)
+    return NULL_RTX;
+
   if (USE_ALTIVEC_FOR_ARG_P (cum, mode, type, named))
     if (TARGET_64BIT && ! cum->prototype)
       {
@@ -6383,6 +6388,9 @@
   int first_reg_offset;
   alias_set_type set;
 
+  if (cum->stackparm)
+    return;
+
   /* Skip the last named argument.  */
   next_cum = *cum;
   function_arg_advance (&next_cum, mode, type, 1, 0);
@@ -19638,6 +19646,7 @@
   { "altivec",   1, 1, false, true,  false, rs6000_handle_altivec_attribute },
   { "longcall",  0, 0, false, true,  true,  rs6000_handle_longcall_attribute },
   { "shortcall", 0, 0, false, true,  true,  rs6000_handle_longcall_attribute },
+  { "stackparm", 0, 0, false, true,  true,  rs6000_handle_longcall_attribute },
   { "ms_struct", 0, 0, false, false, false, rs6000_handle_struct_attribute },
   { "gcc_struct", 0, 0, false, false, false, rs6000_handle_struct_attribute },
 #ifdef SUBTARGET_ATTRIBUTE_TABLE
diff -Naur gcc-4.3.0-orig/gcc/config/rs6000/rs6000.h gcc-4.3.0/gcc/config/rs6000/rs6000.h
--- gcc-4.3.0-orig/gcc/config/rs6000/rs6000.h	2008-01-26 18:18:35.000000000 +0100
+++ gcc-4.3.0/gcc/config/rs6000/rs6000.h	2008-04-30 22:33:15.000000000 +0200
@@ -1434,6 +1434,7 @@
   int nargs_prototype;		/* # args left in the current prototype */
   int prototype;		/* Whether a prototype was defined */
   int stdarg;			/* Whether function is a stdarg function.  */
+  int stackparm;
   int call_cookie;		/* Do special things for this call */
   int sysv_gregno;		/* next available GP register */
   int intoffset;		/* running offset in struct (darwin64) */
