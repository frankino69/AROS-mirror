@c -*- Texinfo -*-
@c  This file is automatically generated from kern/variables.src ()
@c 
@c  Do not change this file
@c 
@setfilename variables
@deffn {AREXX Variable} WITH
Include a file with multiple settings. (This pseudo variable is a extension to the @code{SET} command.)


@end deffn

@deffn {AREXX Variable} ICMP
@deffnx {AREXX Variable} IC
Variables related to Internet Message Control Protocol.


@table @code
@item ERROR
@itemx E
Number of calls to icmp_error().


@item SHORTOLD
@itemx S
No error because old IP was too short.


@item ICMPOLD
@itemx I
No error because old was ICMP.


@item CODE
@itemx CO
ICMP code out of range.


@item TOOSHORT
@itemx T
Packet too short.


@item CHKSUM
@itemx CH
Checksum error.


@item LENGTH
@itemx L
Data length larger than packet.


@item RESPONSES
@itemx R
Number of responses.


@end table
@end deffn

@deffn {AREXX Variable} ICMPHIST
@deffnx {AREXX Variable} ICH
ICMP packet send and reception history. For details on the output format, see @ref{ICMPHIST output}.


@end deffn

@deffn {AREXX Variable} IP
Variables related to Internet Protocol.


@table @code
@item TOTAL
@itemx T
Total number of packets.


@item CHKSUM
@itemx CH
Checksum error.


@item TOOSHORT
@itemx TOOSH
Packet too short.


@item TOOSMALL
@itemx TOOSM
Not enough data.


@item HEADER
@itemx H
IP header length less than data size.


@item LENGTH
@itemx LE
IP header length larger than packet.


@item FRAGMENTS
@itemx FS
Packet fragments received.


@item FDROP
@itemx FD
Fragments dropped (duplicates, out of space).


@item FTIMEOUT
@itemx FT
Fragments timed out.


@item FORWARD
@itemx FO
Packets forwarded.


@item FWDCANT
@itemx FW
Packets received for unreachable destination.


@item REDIRECTSENT
@itemx RED
Packets forwarded on same net.


@item NOPROTO
@itemx N
Unknown or unsupported protocol.


@item DELIVER
@itemx D
Packets consumed here.


@item LOCALOUT
@itemx LO
Total IP packets generated here.


@item ODROPPED
@itemx OD
Lost packets due to nobufs, etc.


@item REASSEMBLED
@itemx REA
Total packets reassembled ok.


@item FED
@itemx FE
Output packets fragmented ok.


@item OFRAGMENTS
@itemx OF
Output fragments created.


@item FCANT
@itemx FC
Don't fragment flag was set, etc.


@end table
@end deffn

@deffn {AREXX Variable} TCP
@deffnx {AREXX Variable} T
Variables related to Transmission Control Protocol.


@table @code
@item CATTEM
@itemx CA
Connections initiated.


@item ACCEPTS
@itemx A
Connections accepted.


@item CONNECT
@itemx CO
Connections established.


@item DROPS
@itemx DR
Connections dropped.


@item CDROPS
@itemx CD
Embryonic connections dropped.


@item CLOSED
@itemx CL
Connections closed (incl. drops).


@item SEGSTIMED
@itemx SE
Segments where we tried to get rtt.


@item RTTUPDATE
@itemx RTT
Times we succeed rtt.


@item DELACK
@itemx DE
Delayed acknowledgments sent.


@item TIMEODROP
@itemx T
Connection dropped in rxmt timeout.


@item REXMTT
@itemx RE
Retransmit timeouts.


@item PERSIST
@itemx P
Persist timeouts.


@item KATIMEO
@itemx KAT
Keepalive timeouts.


@item KAPROBE
@itemx KAP
Keepalive probes sent.


@item KADROPS
@itemx KAD
Connections dropped in keepalive.


@item STOTAL
@itemx ST
Total packets sent.


@item SPACK
@itemx SP
Data packets sent.


@item SBYTE
@itemx SB
Data bytes sent.


@item SREPACK
@itemx SREP
Data packets retransmitted.


@item SREBYTE
@itemx SREB
Data bytes retransmitted.


@item SACKS
@itemx SA
Ack-only packets sent.


@item SWPROBE
@itemx SWP
Window probes sent.


@item SURGENT
@itemx SU
Packets sent with URG only.


@item SWUPDATE
@itemx SWU
Window update-only packets sent.


@item SCTRL
@itemx SC
Control @code{(SYN|FIN|RST)} packets sent.


@item RTOTAL
@itemx RTO
Total packets received.


@item RPACK
@itemx RPA
Packets received in sequence.


@item RBYTE
@itemx RB
Bytes received in sequence.


@item RCHKSUM
@itemx RC
Packets received with checksum errors.


@item ROFFSET
@itemx ROF
Packets received with bad offset.


@item RPSHORT
@itemx RPS
Packets received too short.


@item RDUPPACK
@itemx RDUPP
Duplicate-only packets received.


@item RDUPBYTE
@itemx RDUPB
Duplicate-only bytes received.


@item RPDUPDATA
@itemx RPDUPD
Packets with some duplicate data.


@item RPDUPBYTE
@itemx RPDUPB
Dup. bytes in part-dup. packets.


@item ROOPACK
@itemx ROOP
Out-of-order packets received.


@item ROOBYTE
@itemx ROOB
Out-of-order bytes received.


@item RPLATE
@itemx RPL
Packets with data after window.


@item RBLATE
@itemx RBL
Bytes received after window.


@item RAFTER
@itemx RAF
Packets received after close.


@item RWPROBE
@itemx RWP
Received window probe packets.


@item RDUPACK
@itemx RDUPA
Received duplicate acknowledgments.


@item RACKTOOM
@itemx RACKT
Received acknowledgments for unsent data.


@item RACKPACK
@itemx RACKP
Received acknowledgment packets.


@item RACKBYTE
@itemx RACKB
Bytes acknowledged by received acknowledgments.


@item RWUPDATE
@itemx RWU
Received window update packets.


@end table
@end deffn

@deffn {AREXX Variable} UDP
@deffnx {AREXX Variable} U
Variables related to User Datagram Protocol.


@table @code
@item ITOTAL
@itemx I
Total input packets.


@item HEADSHORT
@itemx H
Packet shorter than header.


@item CHKSUM
@itemx C
Checksum error.


@item LENGTH
@itemx L
Data length larger than packet.


@item NOPORT
@itemx N
No socket on port.


@item BCNOPORT
@itemx B
No socket on port, arrived as broadcast.


@item FULLSOC
@itemx F
Not delivered, input socket full.


@item MISPCB
@itemx M
Input packets missing pcb cache.


@item OTOTAL
@itemx O
Total output packets.


@end table
@end deffn

@deffn {AREXX Variable} CONNECTIONS
Returns a list of all TCP and UDP connections, including server (listening) sockets. For the output format description, see @ref{CONNECTIONS output}.


@end deffn

@deffn {AREXX Variable} HOSTNAME
The name of the host returned by the gethostname() function.


@end deffn

@deffn {AREXX Variable} ROUTES
Returns a list of routing entries for specified protocol family. For the output format description, see @ref{Routing Format}.


@table @code
@item ALL
Unspecified


@item UNIX
Local to host (pipes, portals)


@item INET
Internetwork: UDP, TCP, etc.


@item IMPLINK
Arpanet IMP Addresses


@item PUP
PUP Protocols: e.g. BSP


@item CHAOS
mit CHAOS protocols


@item NS
XEROX NS protocols


@item ISO
ISO protocols


@item ECMA
European Computer Manufacturers


@item DATAKIT
Datakit Protocols


@item CCITT
CCITT protocols, X.25 etc


@item SNA
IBM SNA


@item DECnet
DECnet


@item DLI
DEC Direct Data Link Interface


@item LAT
LAT


@item HYLINK
NSC Hyperchannel


@item APPLETALK
Apple Talk


@item ROUTE
Internal Routing Protocol


@item LINK
Link layer interface


@item XTP
eXpress Transfer Protocol


@end table
@end deffn

@deffn {AREXX Variable} MBUF_STAT
@deffnx {AREXX Variable} MBS
Memory buffer statistics.


@table @code
@item MBUFS
@itemx M
Total number of allocated memory buffers.


@item CLUSTERS
@itemx CL
Total number of allocated memory buffer clusters.


@item CLFREE
@itemx CLF
Number of memory buffer clusters free.


@item MDROPS
@itemx MD
Times failed to find space.


@item NWAITED
@itemx NW
Times waited for space.


@item NDRAINED
@itemx ND
Times drained protocols for space.


@item TOTALMEMORYUSED
@itemx TMU
Total amount of memory used for the mbufs.


@end table
@end deffn

@deffn {AREXX Variable} MBUF_TYPE_STATS
@deffnx {AREXX Variable} MBTS
Returns type specific statistics of mbuf allocations. The last number is the total number of mbufs allocated.


@end deffn

@deffn {AREXX Variable} MBUF_CONF
@deffnx {AREXX Variable} MBC
Memory buffer configuration.


@table @code
@item INITIAL
@itemx I
Number of mbuf chunks to allocate initially.


@item CHUNK
@itemx CH
Number of mbufs to allocate at a time.


@item CLCHUNK
@itemx CL
Number of clusters to allocate at a time.


@item MAXMEM
@itemx MM
Maximum memory to use (in kilobytes).


@item CLUSTERSIZE
@itemx CS
Size of an mbuf cluster.


@end table
@end deffn

@deffn {AREXX Variable} LOG
Logging system configuration.


@table @code
@item COUNT
Number of log messages to use.


@item LEN
Maximum length of a log message.


@end table
@end deffn

@deffn {AREXX Variable} TASKNAME
Name of @AMITCP task.


@end deffn

@deffn {AREXX Variable} NTHBASE
@deffnx {AREXX Variable} NTH
Current @AMITCP has nth @LIB base currently in memory.


@end deffn

@deffn {AREXX Variable} DEBUGSANA
@deffnx {AREXX Variable} DBSANA
Boolean to switch the SANA-II device interface debugging on and off@footnote{For description about boolean variable, see @ref{Boolean Variables}.}.


@end deffn

@deffn {AREXX Variable} DEBUGICMP
@deffnx {AREXX Variable} DBICMP
Boolean to switch the ICMP debugging on and off.


@end deffn

@deffn {AREXX Variable} DEBUGIP
@deffnx {AREXX Variable} DBIP
Boolean telling whether IP should log debugging information.


@end deffn

@deffn {AREXX Variable} GATEWAY
@deffnx {AREXX Variable} GTW
Boolean to switch gateway functionality on and off.


@end deffn

@deffn {AREXX Variable} IPSENDREDIRECTS
@deffnx {AREXX Variable} REDIR
Boolean telling whether IP should send ICMP redirect messages.


@end deffn

@deffn {AREXX Variable} USENAMESERVER
@deffnx {AREXX Variable} USENS
How to use name server. Possible values are:
@table @code
@item NO
Do not use name server at all. Local database will be used instead.
@item FIRST
Query the name servers first and if that fails, use local database.
@item SECOND
First look up the local database, then, if that fails, query the name servers.
@end table


@end deffn

@deffn {AREXX Variable} USELOOPBACK
@deffnx {AREXX Variable} ULO
If true use the local loop device for local traffic.


@end deffn

@deffn {AREXX Variable} TCP_SENDSPACE
@deffnx {AREXX Variable} TCPSND
Default size of the sending socket buffer (TCP).


@end deffn

@deffn {AREXX Variable} TCP_RECVSPACE
@deffnx {AREXX Variable} TCPRCV
Default size of the receiving socket buffer (TCP).


@end deffn

@deffn {AREXX Variable} CONSOLENAME
@deffnx {AREXX Variable} CON
Filename for the log console.


@end deffn

@deffn {AREXX Variable} LOGFILENAME
@deffnx {AREXX Variable} LOGF
Filename for the log file.


@end deffn

