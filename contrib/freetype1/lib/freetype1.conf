##begin config
basename FreeType1
version 3.1
date 18.01.2003
forcebase aroscbase
##end config
##begin cdef

#include <diskfont/glyph.h>
#include <freetype/freetype.h>
#if !defined(TT_FREETYPE_MAJOR) || TT_FREETYPE_MAJOR > 1
#   error need freetype1 include files
#endif
#include <freetype/ftxkern.h>
#include <freetype/ftxpost.h>
#include <freetype/ftxcmap.h>

##end cdef
## begin functionlist
struct GlyphEngine * OpenEngine() ()
.cfunction
.private
void CloseEngine(struct GlyphEngine *ge) (A0)
.cfunction
.private
ULONG SetInfoA(struct GlyphEngine *ge, struct TagItem *tags) (A0,A1)
.cfunction
.private
ULONG ObtainInfoA(struct GlyphEngine *ge, struct TagItem *tags) (A0,A1)
.cfunction
.private
ULONG ReleaseInfoA(struct GlyphEngine *ge, struct TagItem *tags) (A0,A1)
.cfunction
.private
.skip 5
TT_Error TT_FreeType_Version(int *major, int *minor)
TT_Error TT_Init_FreeType(TT_Engine *engine)
TT_Error TT_Done_FreeType(TT_Engine engine)
TT_Error TT_Open_Face(TT_Engine engine, const TT_Text *fontPathName, TT_Face *face)
TT_Error TT_Open_Collection(TT_Engine engine, const TT_Text *collectionPathName, TT_ULong fontIndex, TT_Face *face)
TT_Error TT_Set_Raster_Gray_Palette(TT_Engine engine, TT_Byte *palette)
TT_Error TT_Get_Face_Properties(TT_Face face, TT_Face_Properties *properties)
TT_Error TT_Set_Face_Pointer(TT_Face face, void *data)
void *TT_Get_Face_Pointer(TT_Face face)
TT_Error TT_Flush_Face(TT_Face face)
TT_Error TT_Close_Face(TT_Face face)
TT_Error TT_New_Instance(TT_Face face, TT_Instance *instance)
TT_Error TT_Set_Instance_Resolutions(TT_Instance instance, TT_UShort xResolution, TT_UShort yResolution)
TT_Error TT_Set_Instance_CharSize(TT_Instance instance, TT_F26Dot6 charSize)
TT_Error TT_Set_Instance_CharSizes(TT_Instance instance, TT_F26Dot6 charWidth, TT_F26Dot6 charHeight)
#TT_Set_Pixel_Sizes
TT_Error TT_Set_Instance_Transform_Flags(TT_Instance instance, TT_Bool rotated, TT_Bool stretched)
TT_Error TT_Get_Instance_Metrics(TT_Instance instance, TT_Instance_Metrics *metrics)
TT_Error TT_Set_Instance_Pointer(TT_Instance instance, void *data)
void *TT_Get_Instance_Pointer(TT_Instance instance)
TT_Error TT_Done_Instance(TT_Instance instance)
TT_Error TT_New_Glyph(TT_Face face, TT_Glyph *gluph)
TT_Error TT_Done_Glyph(TT_Glyph glyph)
TT_Error TT_Load_Glyph(TT_Instance instance, TT_Glyph glyph, TT_UShort glyphIndex, TT_UShort loadFlags)
TT_Error TT_Get_Glyph_Outline(TT_Glyph glyph, TT_Outline *outline)
TT_Error TT_Get_Glyph_Metrics(TT_Glyph glyph, TT_Glyph_Metrics *metrics)
TT_Error TT_Get_Glyph_Bitmap(TT_Glyph glyph, TT_Raster_Map *map, TT_F26Dot6 xOffset, TT_F26Dot6 yOffset)
TT_Error TT_Get_Glyph_Pixmap(TT_Glyph glyph, TT_Raster_Map *map, TT_F26Dot6 xOffset, TT_F26Dot6 yOffset)
TT_Error TT_New_Outline(TT_UShort numPoints, TT_Short numCountours, TT_Outline *outline)
TT_Error TT_Done_Outline(TT_Outline *outline)
TT_Error TT_Copy_Outline(TT_Outline *source, TT_Outline *target)
void TT_Transform_Outline(TT_Outline *outline, TT_Matrix *matrix)
void TT_Translate_Outline(TT_Outline *outline, TT_F26Dot6 xOffset, TT_F26Dot6 yOffset)
TT_Error TT_Get_Outline_Bitmap(TT_Engine engine, TT_Outline *outline, TT_Raster_Map *map)
TT_Error TT_Get_Outline_Pixmap(TT_Engine engine, TT_Outline *outline, TT_Raster_Map *map)
TT_Error TT_Get_Outline_BBox(TT_Outline *outline, TT_BBox *bbox)
void TT_Transform_Vector(TT_F26Dot6 *x, TT_F26Dot6 *y, TT_Matrix *matrix)
#TT_Matrix_Multiply
#TT_Matrix_Invert
int TT_Get_CharMap_Count(TT_Face face)
TT_Error TT_Get_CharMap_ID(TT_Face face, TT_UShort charmapIndex, TT_UShort *platformID, TT_UShort *encodingID)
TT_Error TT_Get_CharMap(TT_Face face, TT_UShort charmapIndex, TT_CharMap *charMap)
TT_UShort TT_Char_Index(TT_CharMap charMap, TT_UShort charCode)
int TT_Get_Name_Count(TT_Face face)
TT_Error TT_Get_Name_ID(TT_Face face, TT_UShort nameIndex, TT_UShort *platformID, TT_UShort *encondigID, TT_UShort *languageID, TT_UShort *nameID)
TT_Error TT_Get_Name_String(TT_Face face, TT_UShort nameIndex, TT_String **stringPtr, TT_UShort *length)
TT_Error TT_Init_Kerning_Extension(TT_Engine engine)
TT_Error TT_Get_Kerning_Directory(TT_Face face, TT_Kerning *directory)
TT_Error TT_Get_Font_Data(TT_Face face, TT_ULong tag, TT_Long offset, void *buffer, TT_Long *length)
TT_Error TT_Load_Kerning_Table(TT_Face face, TT_UShort kern_index)
TT_Error TT_Init_Post_Extension(TT_Engine engine)
TT_Error TT_Load_PS_Names(TT_Face face, TT_Post *ppost)
TT_Error TT_Get_PS_Name(TT_Face face, TT_UShort index, TT_String **PSname)
TT_String *TT_ErrToString18(TT_Error error)
## end functionlist
